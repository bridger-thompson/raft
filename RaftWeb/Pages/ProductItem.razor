@using RaftShared;
@using RaftWeb.Models;
@using RaftWeb.Services;
@inject RaftService service;
@inject ProductService productService;
@inject QuantityConverter converter;
@namespace RaftWeb.Pages

<div class="card mb-3">
  <div class="card-body">
    <h5 class="card-title">@Product.Name</h5>
    <p class="card-text">Cost: @Product.Cost</p>
    <p class="card-text">Quantity: @(Product.Quantity == null ? "N/A" : Product.Quantity)</p>
    <button class="btn btn-primary" @onclick="IncreaseQuantity">Increase</button>
    <button class="btn btn-secondary" @onclick="DecreaseQuantity">Decrease</button>
  </div>
</div>

@code {
  [Parameter]
  public Product Product { get; set; }
  private Data lastData;

  protected override async Task OnInitializedAsync()
  {
    await LoadQuantity();
  }

  private async Task LoadQuantity()
  {
    var result = await service.StrongGet(productService.GetKey(Product));
    lastData = result;
    Product.Quantity = productService.LoadQuantity(result);
    StateHasChanged();
  }

  private async Task IncreaseQuantity()
  {
    await productService.IncreaseQuantity(productService.GetKey(Product), Product.Quantity, lastData);
    await LoadQuantity();
  }

  private async Task DecreaseQuantity()
  {
    await productService.DecreaseQuantity(productService.GetKey(Product), Product.Quantity, lastData);
    await LoadQuantity();
  }

}